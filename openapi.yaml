openapi: 3.0.3
info:
  title: Moving API
  version: 1.0.0
servers:
  - url: http://localhost:4000
tags:
  - name: Address
  - name: Customer
  - name: Driver
  - name: Notification
  - name: Favorite
  - name: Review
  - name: Profile
  - name: Auth

paths:
  /address:
    post:
      summary: 주소 등록
      tags:
        - Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAddressInput"
      responses:
        "201":
          description: 주소 등록 성공
        "400":
          description: 필수 정보 누락
          content:
            application/json:
              example:
                message: 필수 주소 정보가 누락되었습니다.
        "500":
          description: 서버 에러
          content:
            application/json:
              example:
                message: 서버 내부 오류가 발생했습니다.
  /customer/address:
    post:
      summary: 고객 주소 연결
      tags:
        - Address
      security:
        - access-token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkCustomerAddressInput"
      responses:
        "201":
          description: 연결 성공
        "400":
          description: 필수 정보 누락
          content:
            application/json:
              example:
                message: 필수 주소 정보가 누락되었습니다.
    get:
      summary: 고객 주소 조회(role 기준)
      tags:
        - Address
      security:
        - access-token: []
      parameters:
        - in: query
          name: role
          required: true
          schema:
            type: string
            enum:
              - FROM
              - TO
              - EXTRA
      responses:
        "200":
          description: 고객 주소 리스트 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerAddress"
              example:
                - id: cusaddr-123
                  role: FROM
                  address:
                    postalCode: "12345"
                    street: 서울특별시 강남구 테헤란로 123
                    detail: 301호
                    region: SEOUL
                    district: 강남구
          "400":
            description: 필수 정보 누락
            content:
              application/json:
                example:
                  message: 필수 요청 정보가 누락되었습니다.
  /customer/estimate-request:
    post:
      summary: 견적 요청 생성
      tags:
        - Customer
      security:
        - access-token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEstimateRequestInput"
      responses:
        "201":
          description: 견적 요청 성공
          content:
            application/json:
              example:
                id: esti-abc123
                customerId: cust-xyz789
                moveType: HOME
                moveDate: "2025-08-15T00:00:00.000Z"
                status: PENDING
                fromAddressId: addr-001
                toAddressId: addr-002
                createdAt: "2025-07-30T10:20:00.000Z"
        "400":
          description: 유효하지 않은 입력
          content:
            application/json:
              example:
                message: 출발지와 도착지는 서로 달라야 합니다.
        "409":
          description: 중복 요청
          content:
            application/json:
              example:
                message: 진행 중인 이사 견적이 있습니다.
  /customer/estimate-request/designated:
    post:
      summary: 지정 견적 요청
      tags:
        - Customer
      security:
        - access-token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDesignatedEstimateRequestInput"
      responses:
        "201":
          description: 지정 요청 성공
          content:
            application/json:
              example:
                message: 지정 견적 요청 완료
        "400":
          description: 유효하지 않은 입력
          content:
            application/json:
              example:
                message: 진행 중인 일반 견적 요청이 없습니다.
        "409":
          description: 중복 지정 요청
          content:
            application/json:
              example:
                message: "이미 지정된 기사님입니다."

  /reviews/reviewable:
    get:
      summary: 리뷰 작성 가능한 견적 조회
      tags: [Review]
      security:
        - access-token: []
      responses:
        "200":
          description: 성공적으로 리뷰 작성 가능한 견적 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReviewableEstimate"
        "400":
          description: 인증 실패
          content:
            application/json:
              example:
                message: "고객 정보를 확인할 수 없습니다.."
        "404":
          description: 리뷰 작성 가능한 견적 없음
          content:
            application/json:
              example:
                message: "작성 가능한 리뷰가 없습니다."
        "500":
          description: 서버 에러
          content:
            application/json:
              example:
                message: "서버 내부 오류가 발생했습니다."
  /reviews:
    post:
      summary: 리뷰 작성
      tags: [Review]
      security:
        - access-token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReviewInput"
      responses:
        "201":
          description: 리뷰 작성 성공
          content:
            application/json:
              example:
                message: "리뷰 작성 완료"
        "400":
          description: 유효하지 않은 입력
          content:
            application/json:
              example:
                message: "고객 정보를 확인할 수 없습니다."
        "500":
          description: 서버 에러
          content:
            application/json:
              example:
                message: "서버 내부 오류가 발생했습니다."
  /reviews/mine:
    get:
      summary: 내가 작성한 리뷰 조회
      tags: [Review]
      security:
        - access-token: []
      responses:
        "200":
          description: 성공적으로 리뷰 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      $ref: "#/components/schemas/Review"
                  totalCount:
                    type: integer
                  totalPages:
                    type: integer
        "400":
          description: 인증 실패
          content:
            application/json:
              example:
                message: "고객 정보를 확인할 수 없습니다."
        "404":
          description: 리뷰 없음
          content:
            application/json:
              example:
                message: "작성한 리뷰가 없습니다."
        "500":
          description: 서버 에러
          content:
            application/json:
              example:
                message: "서버 내부 오류가 발생했습니다."
  /customer/estimate-request/active:
    get:
      summary: 활성 견적 요청 조회
      tags:
        - Customer
      security:
        - access-token: []
      responses:
        "200":
          description: 활성 요청 반환
          content:
            application/json:
              example:
                id: esti-abc123
                moveType: SMALL
                moveDate: "2025-08-10T00:00:00.000Z"
                status: PENDING
                fromAddressId: addr-123
                toAddressId: addr-456

  /customer/estimates/pending:
    get:
      summary: 대기 중인 견적 리스트 조회
      tags:
        - Customer
      security:
        - access-token: []
      responses:
        "200":
          description: 성공적으로 대기 중인 견적 리스트 반환
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PendingEstimatesResponse"
              example:
                estimateRequest:
                  id: esti-abc123
                  moveDate: "2025-08-15T00:00:00.000Z"
                  moveType: HOME
                  requestDate: "2025-08-01T10:00:00.000Z"
                  fromAddress: { region: SEOUL, district: GANGNAM }
                  toAddress: { region: GYEONGGI, district: SEONGNAM }
                estimates:
                  - id: est-001
                    comment: 안전하고 빠르게 진행하겠습니다.
                    price: 180000
                    status: PROPOSED
                    createdAt: "2025-08-01T12:00:00.000Z"
                    driverId: drv-111
                    driver:
                      id: drv-111
                      profileImage: "https://cdn.example.com/driver1.jpg"
                      authUser:
                        id: user-111
                        name: 이사달인
                        phone: "01011112222"
                        email: pro1@example.com
                      avgRating: 4.6
                      reviewCount: 23
                      favoriteCount: 7
                      career: 6
                      work: 42
                    isDesignated: true
                  - id: est-002
                    comment: 친절히 모시겠습니다.
                    price: 200000
                    status: PROPOSED
                    createdAt: "2025-08-01T12:30:00.000Z"
                    driverId: drv-222
                    driver:
                      id: drv-222
                      profileImage: null
                      authUser:
                        id: user-222
                        name: 스마일이사
                        phone: "01033334444"
                        email: pro2@example.com
                      avgRating: 4.3
                      reviewCount: 11
                      favoriteCount: 3
                      career: 4
                      work: 19
                    isDesignated: false
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러

  /customer/estimates/approve:
    get:
      summary: 받았던 견적 리스트 조회
      tags:
        - Customer
      security:
        - access-token: []
      responses:
        "200":
          description: 성공적으로 받았던 견적 리스트 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReceivedEstimatesGroup"
              example:
                - estimateRequest:
                    id: esti-xyz999
                    moveDate: "2025-07-20T00:00:00.000Z"
                    moveType: SMALL
                    requestDate: "2025-07-10T09:00:00.000Z"
                    fromAddress: { street: "서울 강남구 테헤란로 100" }
                    toAddress: { street: "경기 성남시 분당구 정자일로 10" }
                  estimateCount: 2
                  estimates:
                    - id: est-100
                      comment: 신속 정확!
                      price: 150000
                      status: ACCEPTED
                      createdAt: "2025-07-10T09:30:00.000Z"
                      driverId: drv-100
                      driver:
                        id: drv-100
                        profileImage: null
                        authUser:
                          id: user-100
                          name: 분당이사
                          phone: "01055556666"
                          email: bundang@example.com
                        avgRating: 4.8
                        reviewCount: 45
                        favoriteCount: 12
                        career: 8
                        work: 120
                      isDesignated: false
                    - id: est-101
                      comment: 꼼꼼히 도와드려요
                      price: 160000
                      status: AUTO_REJECTED
                      createdAt: "2025-07-10T10:00:00.000Z"
                      driverId: drv-101
                      driver:
                        id: drv-101
                        profileImage: "https://cdn.example.com/driver101.jpg"
                        authUser:
                          id: user-101
                          name: 꼼꼼이사
                          phone: "01077778888"
                          email: neat@example.com
                        avgRating: 4.2
                        reviewCount: 8
                        favoriteCount: 1
                        career: 3
                        work: 15
                      isDesignated: false
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러

  /customer/estimates/:estimateId:
    get:
      summary: 견적 상세 조회 (대기/받았던 공통)
      tags:
        - Customer
      security:
        - access-token: []
      parameters:
        - name: estimateId
          in: path
          required: true
          schema:
            type: string
          description: 견적 ID
      responses:
        "200":
          description: 성공적으로 견적 상세 반환
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EstimateDetailCustomer"
              example:
                id: est-001
                comment: 안전하고 빠르게 진행하겠습니다.
                price: 180000
                status: PROPOSED
                driver:
                  id: drv-111
                  profileImage: "https://cdn.example.com/driver1.jpg"
                  name: 이사달인
                  phone: "01011112222"
                  email: pro1@example.com
                  avgRating: 4.6
                  reviewCount: 23
                  favoriteCount: 7
                  career: 6
                  work: 42
                requestDate: "2025-08-01T10:00:00.000Z"
                moveType: HOME
                moveDate: "2025-08-15T00:00:00.000Z"
                fromAddress: { street: "서울 강남구 테헤란로 100" }
                toAddress: { street: "경기 성남시 분당구 정자일로 10" }
                isDesignated: true
        "400":
          description: 잘못된 요청
        "401":
          description: 인증 실패
        "404":
          description: 견적 정보를 찾을 수 없음
        "500":
          description: 서버 에러

  /customer/estimates/:estimateId/accept:
    patch:
      summary: 견적 확정하기
      tags:
        - Customer
      security:
        - access-token: []
      parameters:
        - name: estimateId
          in: path
          required: true
          schema:
            type: string
          description: 견적 ID
      responses:
        "200":
          description: 견적 확정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 견적이 성공적으로 확정되었습니다.
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      estimateId:
                        type: string
                      driverWork:
                        type: integer
                        description: 기사님의 최신 작업 수
              example:
                message: 견적이 성공적으로 확정되었습니다.
                data:
                  success: true
                  estimateId: est-001
                  driverWork: 121
        "400":
          description: 잘못된 요청
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러

  /estimate/:estimateId/share:
    post:
      summary: 공유 링크 생성 (회원)
      tags:
        - Share
      security:
        - access-token: []
      parameters:
        - name: estimateId
          in: path
          required: true
          schema: { type: string }
          description: 공유할 견적 ID
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sharedFrom:
                  type: string
                  enum: [CUSTOMER, DRIVER]
                  default: CUSTOMER
                  description: 공유 주체(기본 CUSTOMER)
            example:
              sharedFrom: DRIVER
      responses:
        "200":
          description: 공유 링크 생성 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShareLinkResponse"
              example:
                shareUrl: "https://www.moving-2.click/estimate/shared/eyJhbGciOiJIUzI1NiIs..."
        "400":
          description: 잘못된 요청
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러

  /estimate/shared/:token:
    get:
      summary: (공유) 토큰으로 견적 상세 조회
      description: 인증 없이 공유 토큰으로 조회되는 견적 상세. 공유 페이지에서 사용.
      tags:
        - Share
      parameters:
        - name: token
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 성공적으로 공유용 견적 상세 반환
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SharedEstimate"
              example:
                id: est-001
                estimateRequestId: esti-abc123
                driverId: drv-111
                comment: 안전하고 빠르게 진행하겠습니다.
                price: 180000
                status: PROPOSED
                createdAt: "2025-08-01T12:00:00.000Z"
                driver:
                  id: drv-111
                  profileImage: "https://cdn.example.com/driver1.jpg"
                  authUser:
                    id: user-111
                    name: 이사달인
                    phone: "01011112222"
                    email: pro1@example.com
                estimateRequest:
                  id: esti-abc123
                  moveType: HOME
                  moveDate: "2025-08-15T00:00:00.000Z"
                  createdAt: "2025-08-01T10:00:00.000Z"
                  customer:
                    id: cust-999
                    authUser:
                      id: user-999
                      name: 김고객
                      phone: "01099998888"
                      email: customer@example.com
                  fromAddress:
                    id: addr-123
                    postalCode: "06236"
                    street: "서울 강남구 테헤란로 100"
                    detail: "10층 1001호"
                    region: SEOUL
                    district: GANGNAM
                  toAddress:
                    id: addr-456
                    postalCode: "13561"
                    street: "경기 성남시 분당구 정자일로 10"
                    detail: "301동 1203호"
                    region: GYEONGGI
                    district: SEONGNAM
                type: DRIVER
        "400":
          description: 잘못되었거나 만료된 공유 링크
        "404":
          description: 견적을 찾을 수 없음
        "500":
          description: 서버 에러

  /notification:
    get:
      summary: 알림 목록 조회
      tags:
        - Notification
      security:
        - access-token: []
      responses:
        "200":
          description: 알림 목록 조회 성공
          content:
            application/json:
              example:
                - id: cmdpjx8d60005o8f6vt5zd8q7
                  message: '요정구님의 <span style="color: #F9502E">소형이사</span> 견적요청이 전송되었어요.'
                  path: ""
                  type: ESTIMATE_REQUEST
                  isRead: false
                  createdAt: "2025-07-30T05:21:21.541Z"
                  updatedAt: null
                  deletedAt: null
                  receiverId: cmdpiq0dk0003o853egxsqmw8
                  senderId: cmdpiq0dk0003o853egxsqmw8
                - id: cmdpj4l0d0002o8ae7cz0ao8e
                  message: '<span style="color: #F9502E">요정구</span>님, 무빙 회원가입을 축하합니다!'
                  path: ""
                  type: WELCOME
                  isRead: true
                  createdAt: "2025-07-30T05:21:21.541Z"
                  updatedAt: "2025-07-30T05:21:46.182Z"
                  deletedAt: null
                  receiverId: cmdpiq0dk0003o853egxsqmw8
                  senderId: cmdpiq0dk0003o853egxsqmw8
        "500":
          description: 서버 에러
          content:
            application/json:
              example:
                message: 서버 내부 오류가 발생했습니다.
  /notification/:id:
    get:
      summary: 특정 알림 조회
      tags:
        - Notification
      security:
        - access-token: []
      responses:
        "200":
          description: 알림 조회 성공
          content:
            application/json:
              example:
                - id: cmdpjx8d60005o8f6vt5zd8q7
                  message: '요정구님의 <span style="color: #F9502E">소형이사</span> 견적요청이 전송되었어요.'
                  path: ""
                  type: ESTIMATE_REQUEST
                  isRead: false
                  createdAt: "2025-07-30T05:21:21.541Z"
                  updatedAt: null
                  deletedAt: null
                  receiverId: cmdpiq0dk0003o853egxsqmw8
                  senderId: cmdpiq0dk0003o853egxsqmw8
        "500":
          description: 서버 에러
          content:
            application/json:
              example:
                message: 서버 내부 오류가 발생했습니다.
    patch:
      summary: 특정 알림 읽음 처리
      tags:
        - Notification
      security:
        - access-token: []
      responses:
        "200":
          description: 알림 읽음 처리 성공
          content:
            application/json:
              example:
                message: 알림을 성공적으로 읽음 처리했습니다.
                notification:
                  - id: cmdpjx8d60005o8f6vt5zd8q7
                    message: '요정구님의 <span style="color: #F9502E">소형이사</span> 견적요청이 전송되었어요.'
                    path: ""
                    type: ESTIMATE_REQUEST
                    isRead: true
                    createdAt: "2025-07-30T05:21:21.541Z"
                    updatedAt: "2025-07-31T05:21:21.541Z"
                    deletedAt: null
                    receiverId: cmdpiq0dk0003o853egxsqmw8
                    senderId: cmdpiq0dk0003o853egxsqmw8
        "500":
          description: 서버 에러
          content:
            application/json:
              example:
                message: 서버 내부 오류가 발생했습니다.
  /favorite:
    get:
      summary: 즐겨찾기한 기사 리스트 조회
      tags:
        - Favorite
      security:
        - access-token: []
      responses:
        "200":
          description: 성공적으로 즐겨찾기한 기사 리스트 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Driver"
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러
  /favorite/drivers/:id:
    post:
      summary: 기사 즐겨찾기 추가
      tags:
        - Favorite
      security:
        - access-token: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: 즐겨찾기 추가 성공
        "400":
          description: 잘못된 요청
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러
    delete:
      summary: 기사 즐겨찾기 삭제
      tags:
        - Favorite
      security:
        - access-token: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 즐겨찾기 삭제 성공
        "401":
          description: 인증 실패
        "404":
          description: 즐겨찾기 내역 없음
        "500":
          description: 서버 에러
  /driver/auth:
    get:
      summary: 전체 기사 리스트 조회(회원)
      tags:
        - Driver
      security:
        - access-token: []
      responses:
        "200":
          description: 성공적으로 기사 리스트를 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Driver"
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러
  /driver/:id/auth:
    get:
      summary: 특정 기사 정보 조회(회원)
      tags:
        - Driver
      security:
        - access-token: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 기사 ID
      responses:
        "200":
          description: 성공적으로 기사 정보를 반환
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
        "401":
          description: 인증 실패
        "404":
          description: 기사 정보를 찾을 수 없음
        "500":
          description: 서버 에러
  /driver:
    get:
      summary: 전체 기사 리스트 조회 (비회원용)
      tags:
        - Driver
      responses:
        "200":
          description: 성공적으로 기사 리스트를 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Driver"
        "500":
          description: 서버 에러
  /driver/:id:
    get:
      summary: 특정 기사 정보 조회 (비회원용)
      tags:
        - Driver
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 기사 ID
      responses:
        "200":
          description: 성공적으로 기사 정보를 반환
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
        "404":
          description: 기사 정보를 찾을 수 없음
        "500":
          description: 서버 에러
  /driver/:id/reviews:
    get:
      summary: 특정 기사의 리뷰 조회
      tags:
        - Driver
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 기사 ID
      responses:
        "200":
          description: 성공적으로 리뷰 목록을 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
        "404":
          description: 기사 정보를 찾을 수 없음
        "500":
          description: 서버 에러
  /driver/estimate-requests/designated:
    get:
      summary: 지정 견적 요청 조회
      tags:
        - Driver
      security:
        - access-token: []
      responses:
        "200":
          description: 지정 견적 요청 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EstimateRequest"
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러
  /driver/estimate-requests/available:
    get:
      summary: 일반 견적 요청 조회
      tags:
        - Driver
      security:
        - access-token: []
      responses:
        "200":
          description: 일반 견적 요청 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EstimateRequest"
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러
  /driver/estimate-requests:
    get:
      summary: 모든 견적 요청 조회
      tags:
        - Driver
      security:
        - access-token: []
      responses:
        "200":
          description: 모든 견적 요청 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EstimateRequest"
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러
  /driver/estimate-requests/{requestId}/estimates:
    post:
      summary: 견적 생성
      tags:
        - Driver
      security:
        - access-token: []
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
          description: 견적 요청 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEstimateInput"
      responses:
        "201":
          description: 견적 생성 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estimate"
        "400":
          description: 유효하지 않은 입력
          content:
            application/json:
              example:
                message: 유효한 견적가를 입력해주세요.
        "401":
          description: 인증 실패
        "404":
          description: 견적 요청을 찾을 수 없음
        "409":
          description: 이미 견적을 보냈습니다
        "500":
          description: 서버 에러
  /driver/estimate-requests/{requestId}/reject:
    post:
      summary: 견적 요청 반려
      tags:
        - Driver
      security:
        - access-token: []
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
          description: 견적 요청 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectEstimateRequestInput"
      responses:
        "200":
          description: 견적 요청 반려 성공
          content:
            application/json:
              example:
                message: 견적 요청이 반려되었습니다.
        "400":
          description: 유효하지 않은 입력
          content:
            application/json:
              example:
                message: 이사일이 지난 견적 요청에는 반려할 수 없습니다.
        "401":
          description: 인증 실패
        "404":
          description: 견적 요청을 찾을 수 없음
        "409":
          description: 이미 반려한 요청입니다
        "500":
          description: 서버 에러
  /driver/estimates:
    get:
      summary: 내 견적 조회
      tags:
        - Driver
      security:
        - access-token: []
      responses:
        "200":
          description: 내 견적 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Estimate"
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러
  /driver/estimates/{estimateId}:
    get:
      summary: 견적 상세 조회
      tags:
        - Driver
      security:
        - access-token: []
      parameters:
        - name: estimateId
          in: path
          required: true
          schema:
            type: string
          description: 견적 ID
      responses:
        "200":
          description: 견적 상세 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estimate"
        "401":
          description: 인증 실패
        "404":
          description: 견적을 찾을 수 없음
        "500":
          description: 서버 에러
  /driver/estimate-requests/rejected:
    get:
      summary: 반려한 견적 요청 조회
      tags:
        - Driver
      security:
        - access-token: []
      responses:
        "200":
          description: 반려한 견적 요청 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EstimateRequest"
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러
  /auth/signup:
    post:
      summary: 회원가입
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpInput"
      responses:
        "201":
          description: 회원가입 성공
          content:
            application/json:
              example:
                id: cmdybbktb0000s69v1v20bxa7
                email: customer@test11.com
                phone: 01012345678
                name: 김테스트
                userType: CUSTOMER
                provider: LOCAL
                providerId: null
                createdAt: "2025-08-05T09:04:06.432Z"
                updatedAt: "2025-08-05T09:04:06.432Z"
                deletedAt: null
  /auth/login:
    post:
      summary: 로그인
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInput"
      responses:
        "200":
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  user:
                    type: object
                    required:
                      - id
                      - email
                      - userType
                      - phone
                      - name
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      userType:
                        type: string
                        enum:
                          - CUSTOMER
                          - DRIVER
                      phone:
                        type: string
                      name:
                        type: string
              example:
                accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                user:
                  id: cmdy8ve9e0000s6vp0smx4i46
                  email: customer@test10.com
                  userType: CUSTOMER
                  phone: 01012345678
                  name: 김테스트
  /auth/logout:
    post:
      summary: 로그아웃
      tags:
        - Auth
      responses:
        "204":
          description: 로그아웃 성공
  /auth/me:
    get:
      summary: 내 정보 확인
      tags:
        - Auth
      responses:
        "200":
          description: 토큰 기반 유저 정보
          content:
            application/json:
              example:
                user:
                  id: cmdy8ve9e0000s6vp0smx4i46
                  userType: CUSTOMER
                  customerId: cmdy9927c0003s647oczsyull
                  iat: 1754384755
                  exp: 1754384815
  /auth/me/detail:
    get:
      summary: 로그인 유저 상세 정보 조회
      tags:
        - Auth
      responses:
        "200":
          description: 유저 + 프로필 상세 정보
          content:
            application/json:
              example:
                id: cmdy8ve9e0000s6vp0smx4i46
                email: customer@test10.com
                phone: 01012345678
                name: 김테스트
                userType: CUSTOMER
                provider: LOCAL
                providerId: null
                createdAt: "2025-08-05T07:55:32.210Z"
                updatedAt: "2025-08-05T07:55:32.210Z"
                deletedAt: null
                customer:
                  id: cmdy9927c0003s647oczsyull
                  authUserId: cmdy8ve9e0000s6vp0smx4i46
                  profileImage: https://example.com/image.jpg
                  moveType:
                    - OFFICE
                    - HOME
                  currentArea: 서울
                  moveDate: null
                  deletedAt: null
                  languagePrefId: null
                driver: null
  /auth/me/name:
    get:
      summary: 이름 + 프로필 이미지 조회
      tags:
        - Auth
      responses:
        "200":
          description: 이름, 프로필 이미지
          content:
            application/json:
              example:
                name: 김테스트
                profileImage: https://example.com/image.jpg
  /auth/refresh-token:
    post:
      summary: 액세스토큰 재발급
      tags:
        - Auth
      responses:
        "200":
          description: 새 액세스토큰 발급
          content:
            application/json:
              example:
                accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
  /auth/{provider}:
    get:
      summary: 소셜 로그인 시작
      tags:
        - Auth
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
            enum:
              - google
              - kakao
              - naver
      responses:
        "302":
          description: 소셜 로그인 페이지로 리디렉션
  /auth/{provider}/callback:
    get:
      summary: 소셜 로그인 콜백
      tags:
        - Auth
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
            enum:
              - google
              - kakao
              - naver
      responses:
        "200":
          description: 소셜 로그인 성공
          content:
            application/json:
              example:
                accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                user:
                  id: cmdy8ve9e0000s6vp0smx4i46
                  email: customer@test10.com
                  userType: CUSTOMER
                  phone: 01012345678
                  name: 김테스트
  /profile/customer:
    post:
      summary: 고객 프로필 생성
      tags:
        - Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomerProfileInput"
      responses:
        "201":
          description: 고객 프로필 생성 성공
          content:
            application/json:
              example:
                profile:
                  id: cmdybood50006s69vh6hvzutz
                  authUserId: cmdyboc370003s69vu6zbtcxs
                  profileImage: https://example.com/image.jpg
                  moveType:
                    - OFFICE
                    - HOME
                  currentArea: 서울
                  moveDate: null
                  deletedAt: null
                  languagePrefId: null
                accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    patch:
      summary: 고객 프로필 수정
      tags:
        - Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCustomerProfileInput"
      responses:
        "200":
          description: 고객 프로필 수정 성공
          content:
            application/json:
              example:
                authUser:
                  id: cmdyboc370003s69vu6zbtcxs
                  email: customer@test12.com
                  password: "..."
                  phone: 01012345678
                  name: 홍길길동
                  userType: CUSTOMER
                  provider: LOCAL
                  providerId: null
                  createdAt: "2025-08-05T09:14:01.651Z"
                  updatedAt: "2025-08-05T09:17:00.688Z"
                  deletedAt: null
                  customer:
                    id: cmdybood50006s69vh6hvzutz
                    authUserId: cmdyboc370003s69vu6zbtcxs
                    profileImage: https://example.com/new
                    moveType:
                      - HOME
                    currentArea: 서울
                    moveDate: null
                    deletedAt: null
                    languagePrefId: null
                  driver: null
  /profile/driver:
    post:
      summary: 기사 프로필 생성
      tags:
        - Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDriverProfileInput"
      responses:
        "201":
          description: 기사 프로필 생성 성공
          content:
            application/json:
              example:
                profile:
                  driver:
                    id: cmdybw683000gs69v574ua7p1
                    authUserId: cmdybv9bk000ds69vfohs8lf2
                    nickname: 이사님님님
                    profileImage: https://example.com/image.jpg
                    shortIntro: 빠르고 안전한 이사
                    detailIntro: 경력 5년의 베테랑 기사입니다.
                    moveType:
                      - OFFICE
                      - HOME
                    career: 5
                    work: 0
                    deletedAt: null
                    averageRating: 0
                    languagePrefId: null
                    serviceAreas:
                      - id: cmdybw684000hs69v7kuwqmws
                        driverId: cmdybw683000gs69v574ua7p1
                        region: SEOUL
                        district: null
                      - id: cmdybw684000is69vsuzxfj36
                        driverId: cmdybw683000gs69v574ua7p1
                        region: BUSAN
                        district: null
                accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    patch:
      summary: 기사 프로필 수정
      tags:
        - Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDriverProfileInput"
      responses:
        "200":
          description: 기사 프로필 수정 성공
          content:
            application/json:
              example:
                id: cmdybw683000gs69v574ua7p1
                authUserId: cmdybv9bk000ds69vfohs8lf2
                nickname: 이사가능장인임임
                profileImage: https://example.com/image.jpg
                shortIntro: 빠르고 안전한 이사
                detailIntro: 경력 5년의 베테랑 기사.
                moveType:
                  - HOME
                career: 3
                work: 0
                deletedAt: null
                averageRating: 0
                languagePrefId: null
  /profile/driver/base-info:
    patch:
      summary: 기사 기본정보 수정
      tags:
        - Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDriverBaseInfoInput"
      responses:
        "200":
          description: 기사 기본정보 수정 성공
          content:
            application/json:
              example:
                authUser:
                  id: cmdybv9bk000ds69vfohs8lf2
                  email: driver@test14.com
                  password: "..."
                  phone: 01098765432
                  name: 홍길순
                  userType: DRIVER
                  provider: LOCAL
                  providerId: null
                  createdAt: "2025-08-05T09:19:24.657Z"
                  updatedAt: "2025-08-05T09:25:10.375Z"
                  deletedAt: null
                  customer: null
                  driver:
                    id: cmdybw683000gs69v574ua7p1
                    authUserId: cmdybv9bk000ds69vfohs8lf2
                    nickname: 이사가능장인임임
                    profileImage: https://example.com/image.jpg
                    shortIntro: 빠르고 안전한 이사
                    detailIntro: 경력 5년의 베테랑 기사.
                    moveType:
                      - HOME
                    career: 3
                    work: 0
                    deletedAt: null
                    averageRating: 0
                    languagePrefId: null
                    serviceAreas:
                      - region: JEONBUK
                      - region: BUSAN
components:
  schemas:
    CreateAddressInput:
      type: object
      required:
        - postalCode
        - street
        - region
        - district
      properties:
        postalCode:
          type: string
        street:
          type: string
        detail:
          type: string
        region:
          type: string
          enum:
            - SEOUL
            - BUSAN
            - DAEGU
            - INCHEON
            - GWANGJU
            - DAEJEON
            - ULSAN
            - SEJONG
            - GYEONGGI
            - GANGWON
            - CHUNGBUK
            - CHUNGNAM
            - JEONBUK
            - JEONNAM
            - GYEONGBUK
            - GYEONGNAM
            - JEJU
        district:
          type: string
    LinkCustomerAddressInput:
      type: object
      required:
        - addressId
        - role
      properties:
        addressId:
          type: string
        role:
          type: string
          enum:
            - FROM
            - TO
            - EXTRA
        customLabel:
          type: string
    CreateEstimateRequestInput:
      type: object
      required:
        - moveType
        - moveDate
        - fromAddressId
        - toAddressId
      properties:
        moveType:
          type: string
          enum:
            - SMALL
            - HOME
            - OFFICE
        moveDate:
          type: string
          format: date-time
        fromAddressId:
          type: string
        toAddressId:
          type: string
    CreateDesignatedEstimateRequestInput:
      type: object
      required:
        - moveType
        - moveDate
        - fromAddressId
        - toAddressId
        - driverId
      properties:
        moveType:
          type: string
          enum:
            - SMALL
            - HOME
            - OFFICE
        moveDate:
          type: string
          format: date-time
        fromAddressId:
          type: string
        toAddressId:
          type: string
        driverId:
          type: string
          description: 지정하고자 하는 기사님 ID
    CustomerAddress:
      type: object
      properties:
        id:
          type: string
        role:
          type: string
          enum:
            - FROM
            - TO
            - EXTRA
        customLabel:
          type: string
        address:
          type: object
          properties:
            postalCode:
              type: string
            street:
              type: string
            detail:
              type: string
            region:
              type: string
            district:
              type: string
    Favorite:
      type: object
      properties:
        id:
          type: string
          example: fav-abc123
        driverId:
          type: string
          example: drv-123
        customerId:
          type: string
          example: user-789
        createdAt:
          type: string
          format: date-time
    Driver:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: abc123-uuid
        nickname:
          type: string
          example: 이삿짐마스터
        phone:
          type: string
          example: 01012345678
        profileImage:
          type: string
          format: uri
          example: https://example.com/profile.jpg
        shortIntro:
          type: string
          example: 10년 경력의 이사 전문가입니다.
        detailIntro:
          type: string
          example: 서울 및 수도권 지역 전문 이사 서비스를 제공합니다.
        moveType:
          type: array
          items:
            type: string
            enum:
              - SMALL
              - HOME
              - OFFICE
          example:
            - SMALL
            - HOME
        serviceAreas:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              region:
                type: string
                example: SEOUL
        averageRating:
          type: number
          format: float
          example: 4.7
        reviewCount:
          type: integer
          example: 12
        favoriteCount:
          type: integer
          example: 5
        isFavorite:
          type: boolean
          example: true
    Review:
      type: object
      properties:
        id:
          type: string
          example: rev-001
        rating:
          type: number
          format: float
          example: 4.5
        content:
          type: string
          example: 정말 친절하고 만족스러운 서비스였습니다.
        createdAt:
          type: string
          format: date-time
        email:
          type: string
          example: "customer1@example.com"
    CreateReviewInput:
      type: object
      properties:
        content:
          type: string
        rating:
          type: number
        driverId:
          type: string
        estimateRequestId:
          type: string
      required: [content, rating, driverId, estimateRequestId]
    ReviewableEstimate:
      type: object
      properties:
        estimateId:
          type: string
        driverId:
          type: string
        moveDate:
          type: string
          format: date-time
        fromAddress:
          type: string
        toAddress:
          type: string
          example: customer1@example.com

    EstimateRequest:
      type: object
      properties:
        id:
          type: string
          example: esti-abc123
        customerId:
          type: string
          example: cust-xyz789
        moveType:
          type: string
          enum:
            - SMALL
            - HOME
            - OFFICE
          example: HOME
        moveDate:
          type: string
          format: date-time
          example: "2025-08-15T00:00:00.000Z"
        status:
          type: string
          enum:
            - PENDING
            - CONFIRMED
            - COMPLETED
            - CANCELLED
          example: PENDING
        fromAddressId:
          type: string
          example: addr-001
        toAddressId:
          type: string
          example: addr-002
        createdAt:
          type: string
          format: date-time
          example: "2025-07-30T10:20:00.000Z"
    CreateEstimateInput:
      type: object
      required:
        - price
        - message
      properties:
        price:
          type: number
          minimum: 1
          example: 150000
          description: 견적가 (원)
        message:
          type: string
          example: 안전하고 신속한 이사 서비스를 제공하겠습니다.
          description: 견적 메시지
    RejectEstimateRequestInput:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          example: 일정이 맞지 않습니다.
          description: 반려 사유
    Estimate:
      type: object
      properties:
        id:
          type: string
          example: est-abc123
        driverId:
          type: string
          example: drv-xyz789
        estimateRequestId:
          type: string
          example: esti-abc123
        price:
          type: number
          example: 150000
        comment:
          type: string
          example: 안전하고 신속한 이사 서비스를 제공하겠습니다.
        status:
          type: string
          enum:
            - PENDING
            - ACCEPTED
            - REJECTED
          example: PENDING
        createdAt:
          type: string
          format: date-time
          example: "2025-07-30T10:20:00.000Z"
    SignUpInput:
      type: object
      required:
        - email
        - password
        - phone
        - name
        - userType
        - provider
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        phone:
          type: string
        name:
          type: string
        userType:
          type: string
          enum:
            - CUSTOMER
            - DRIVER
        provider:
          type: string
          enum:
            - LOCAL
            - GOOGLE
            - NAVER
            - KAKAO
    LoginInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      example:
        email: customer@test10.com
        password: password123!
    CreateCustomerProfileInput:
      type: object
      properties:
        profileImage:
          type: string
        moveType:
          type: array
          items:
            type: string
        currentArea:
          type: string
    UpdateCustomerProfileInput:
      type: object
      properties:
        profileImage:
          type: string
        moveType:
          type: array
          items:
            type: string
        currentArea:
          type: string
        name:
          type: string
        phone:
          type: string
        currentPassword:
          type: string
        newPassword:
          type: string
        passwordConfirmation:
          type: string
    CreateDriverProfileInput:
      type: object
      properties:
        profileImage:
          type: string
        nickname:
          type: string
        career:
          type: integer
        shortIntro:
          type: string
        detailIntro:
          type: string
        moveType:
          type: array
          items:
            type: string
        serviceAreas:
          type: array
          items:
            type: object
            properties:
              region:
                type: string
            required:
              - region
    UpdateDriverProfileInput:
      type: object
      properties:
        nickname:
          type: string
        career:
          type: integer
        shortIntro:
          type: string
        detailIntro:
          type: string
        moveType:
          type: array
          items:
            type: string
        serviceAreas:
          type: array
          items:
            type: object
            properties:
              region:
                type: string
            required:
              - region
    UpdateDriverBaseInfoInput:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        password:
          type: string
        currentPassword:
          type: string
        newPassword:
          type: string
        passwordConfirmation:
          type: string
    LoginUser:
      type: object
      required:
        - id
        - email
        - userType
        - phone
        - name
      properties:
        id:
          type: string
        email:
          type: string
        userType:
          type: string
          enum:
            - CUSTOMER
            - DRIVER
        phone:
          type: string
        name:
          type: string
