openapi: 3.0.3
info:
  title: Moving API
  version: 1.0.0

servers:
  - url: http://localhost:4000

tags:
  - name: Address
  - name: Customer
  - name: Driver
  - name: Notification

paths:
  /address:
    post:
      summary: 주소 등록
      tags: [Address]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAddressInput"
      responses:
        "201":
          description: 주소 등록 성공
        "400":
          description: 필수 정보 누락
          content:
            application/json:
              example:
                message: "필수 주소 정보가 누락되었습니다."
        "500":
          description: 서버 에러
          content:
            application/json:
              example:
                message: "서버 내부 오류가 발생했습니다."

  /customer/address:
    post:
      summary: 고객 주소 연결
      tags: [Address]
      security:
        - access-token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkCustomerAddressInput"
      responses:
        "201":
          description: 연결 성공
        "400":
          description: 필수 정보 누락
          content:
            application/json:
              example:
                message: "필수 주소 정보가 누락되었습니다."

    get:
      summary: 고객 주소 조회(role 기준)
      tags: [Address]
      security:
        - access-token: []
      parameters:
        - in: query
          name: role
          required: true
          schema:
            type: string
            enum: [FROM, TO, EXTRA]
      responses:
        "200":
          description: 고객 주소 리스트 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerAddress"
              example:
                - id: "cusaddr-123"
                  role: "FROM"
                  address:
                    postalCode: "12345"
                    street: "서울특별시 강남구 테헤란로 123"
                    detail: "301호"
                    region: "SEOUL"
                    district: "강남구"
          "400":
            description: 필수 정보 누락
            content:
              application/json:
                example:
                  message: "필수 요청 정보가 누락되었습니다."

  /customer/estimate-request:
    post:
      summary: 견적 요청 생성
      tags: [Customer]
      security:
        - access-token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEstimateRequestInput"
      responses:
        "201":
          description: 견적 요청 성공
          content:
            application/json:
              example:
                id: "esti-abc123"
                customerId: "cust-xyz789"
                moveType: "HOME"
                moveDate: "2025-08-15T00:00:00.000Z"
                status: "PENDING"
                fromAddressId: "addr-001"
                toAddressId: "addr-002"
                createdAt: "2025-07-30T10:20:00.000Z"

        "400":
          description: 유효하지 않은 입력
          content:
            application/json:
              example:
                message: "출발지와 도착지는 서로 달라야 합니다."
        "409":
          description: 중복 요청
          content:
            application/json:
              example:
                message: "진행 중인 이사 견적이 있습니다."

  /customer/estimate-request/designated:
    post:
      summary: 지정 견적 요청
      tags: [Customer]
      security:
        - access-token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDesignatedEstimateRequestInput"
      responses:
        "201":
          description: 지정 요청 성공
          content:
            application/json:
              example:
                message: "지정 견적 요청 완료"
        "400":
          description: 유효하지 않은 입력
          content:
            application/json:
              example:
                message: "진행 중인 일반 견적 요청이 없습니다."
        "409":
          description: 중복 지정 요청
          content:
            application/json:
              example:
                message: "이미 지정된 기사님입니다."

  /customer/estimate-request/active:
    get:
      summary: 활성 견적 요청 조회
      tags: [Customer]
      security:
        - access-token: []
      responses:
        "200":
          description: 활성 요청 반환
          content:
            application/json:
              example:
                id: "esti-abc123"
                moveType: "SMALL"
                moveDate: "2025-08-10T00:00:00.000Z"
                status: "PENDING"
                fromAddressId: "addr-123"
                toAddressId: "addr-456"
  /notification:
    get:
      summary: 알림 목록 조회
      tags: [Notification]
      security:
        - access-token: []
      responses:
        "200":
          description: 알림 목록 조회 성공
          content:
            application/json:
              example:
                - id: "cmdpjx8d60005o8f6vt5zd8q7"
                  message: '요정구님의 <span style="color: #F9502E">소형이사</span> 견적요청이 전송되었어요.'
                  path: ""
                  type: "ESTIMATE_REQUEST"
                  isRead: false
                  createdAt: "2025-07-30T05:21:21.541Z"
                  updatedAt: null
                  deletedAt: null
                  receiverId: "cmdpiq0dk0003o853egxsqmw8"
                  senderId: "cmdpiq0dk0003o853egxsqmw8"
                - id: "cmdpj4l0d0002o8ae7cz0ao8e"
                  message: '<span style="color: #F9502E">요정구</span>님, 무빙 회원가입을 축하합니다!'
                  path: ""
                  type: "WELCOME"
                  isRead: true
                  createdAt: "2025-07-30T05:21:21.541Z"
                  updatedAt: "2025-07-30T05:21:46.182Z"
                  deletedAt: null
                  receiverId: "cmdpiq0dk0003o853egxsqmw8"
                  senderId: "cmdpiq0dk0003o853egxsqmw8"
        "500":
          description: 서버 에러
          content:
            application/json:
              example:
                message: "서버 내부 오류가 발생했습니다."

  /notification/:id:
    get:
      summary: 특정 알림 조회
      tags: [Notification]
      security:
        - access-token: []
      responses:
        "200":
          description: 알림 조회 성공
          content:
            application/json:
              example:
                - id: "cmdpjx8d60005o8f6vt5zd8q7"
                  message: '요정구님의 <span style="color: #F9502E">소형이사</span> 견적요청이 전송되었어요.'
                  path: ""
                  type: "ESTIMATE_REQUEST"
                  isRead: false
                  createdAt: "2025-07-30T05:21:21.541Z"
                  updatedAt: null
                  deletedAt: null
                  receiverId: "cmdpiq0dk0003o853egxsqmw8"
                  senderId: "cmdpiq0dk0003o853egxsqmw8"
        "500":
          description: 서버 에러
          content:
            application/json:
              example:
                message: "서버 내부 오류가 발생했습니다."

    patch:
      summary: 특정 알림 읽음 처리
      tags: [Notification]
      security:
        - access-token: []
      responses:
        "200":
          description: 알림 읽음 처리 성공
          content:
            application/json:
              example:
                message: "알림을 성공적으로 읽음 처리했습니다."
                notification:
                  - id: "cmdpjx8d60005o8f6vt5zd8q7"
                    message: '요정구님의 <span style="color: #F9502E">소형이사</span> 견적요청이 전송되었어요.'
                    path: ""
                    type: "ESTIMATE_REQUEST"
                    isRead: true
                    createdAt: "2025-07-30T05:21:21.541Z"
                    updatedAt: "2025-07-31T05:21:21.541Z"
                    deletedAt: null
                    receiverId: "cmdpiq0dk0003o853egxsqmw8"
                    senderId: "cmdpiq0dk0003o853egxsqmw8"
        "500":
          description: 서버 에러
          content:
            application/json:
              example:
                message: "서버 내부 오류가 발생했습니다."

components:
  schemas:
    CreateAddressInput:
      type: object
      required: [postalCode, street, region, district]
      properties:
        postalCode:
          type: string
        street:
          type: string
        detail:
          type: string
        region:
          type: string
          enum:
            [
              SEOUL,
              BUSAN,
              DAEGU,
              INCHEON,
              GWANGJU,
              DAEJEON,
              ULSAN,
              SEJONG,
              GYEONGGI,
              GANGWON,
              CHUNGBUK,
              CHUNGNAM,
              JEONBUK,
              JEONNAM,
              GYEONGBUK,
              GYEONGNAM,
              JEJU
            ]
        district:
          type: string

    LinkCustomerAddressInput:
      type: object
      required: [addressId, role]
      properties:
        addressId:
          type: string
        role:
          type: string
          enum: [FROM, TO, EXTRA]
        customLabel:
          type: string

    CreateEstimateRequestInput:
      type: object
      required: [moveType, moveDate, fromAddressId, toAddressId]
      properties:
        moveType:
          type: string
          enum: [SMALL, HOME, OFFICE]
        moveDate:
          type: string
          format: date-time
        fromAddressId:
          type: string
        toAddressId:
          type: string

    CreateDesignatedEstimateRequestInput:
      type: object
      required: [moveType, moveDate, fromAddressId, toAddressId, driverId]
      properties:
        moveType:
          type: string
          enum: [SMALL, HOME, OFFICE]
        moveDate:
          type: string
          format: date-time
        fromAddressId:
          type: string
        toAddressId:
          type: string
        driverId:
          type: string
          description: 지정하고자 하는 기사님 ID

    CustomerAddress:
      type: object
      properties:
        id:
          type: string
        role:
          type: string
          enum: [FROM, TO, EXTRA]
        customLabel:
          type: string
        address:
          type: object
          properties:
            postalCode:
              type: string
            street:
              type: string
            detail:
              type: string
            region:
              type: string
            district:
              type: string
